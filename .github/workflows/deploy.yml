name: Deploy to Netlify

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-
    
    - name: Install dependencies
      run: bun install
    
    - name: Build static export (with error handling)
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      run: |
        echo "üöÄ Starting build with error handling..."
        
        # Try static export first
        if bun run build:static; then
          echo "‚úÖ Static export successful"
          BUILD_SUCCESS=true
        else
          echo "‚ùå Static export failed, trying regular build..."
          
          # Fallback: Try regular build
          if bun run build; then
            echo "‚úÖ Regular build successful" 
            BUILD_SUCCESS=true
          else
            echo "‚ùå All build methods failed"
            exit 1
          fi
        fi
        
        # Verify build output exists
        if [ -d "out" ]; then
          echo "‚úÖ Build output confirmed in 'out' directory"
          ls -la out/
        elif [ -d ".next" ]; then
          echo "‚ö†Ô∏è Using .next directory as fallback"
          cp -r .next out
        else
          echo "‚ùå No build output found"
          exit 1
        fi
    
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './out'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions - ${{ github.sha }}"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 15
    
    - name: Upload build artifacts (for debugging)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: |
          out/
          .next/
          *.log
        retention-days: 5
    
    - name: Post-deployment verification
      if: success()
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "üåê Site should be available at your Netlify domain"
        echo "üìä Build completed at: $(date)"
